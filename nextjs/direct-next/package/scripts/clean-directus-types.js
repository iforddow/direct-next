const fs = require("fs-extra");
const path = require("path");

const inputPath = path.resolve(__dirname, "../types/open-api.ts"); // generated by openapi-typescript
const outputPath = path.resolve(__dirname, "../types/directus-schemas.ts");

async function transform() {
  const content = await fs.readFile(inputPath, "utf8");

  // Extract all Items<CollectionName> type definitions from the schemas section
  const regex = /^\s*(Items[A-Za-z]+):\s*{/gm;
  let match;
  const aliases = [];
  const collections = new Set();

  // Import the components type from the open-api file
  aliases.push(`import type { components } from './open-api';`);
  aliases.push(""); // Empty line for readability

  while ((match = regex.exec(content)) !== null) {
    const schemaName = match[1]; // e.g., "ItemsPages"
    const tsName = schemaName.replace(/^Items/, ""); // e.g., "Pages"

    aliases.push(
      `export type ${tsName} = components["schemas"]["${schemaName}"];`,
    );
    collections.add(tsName);
  }

  const finalOutput = aliases.join("\n");

  await fs.writeFile(outputPath, finalOutput);
  console.log("âœ… Clean Directus types generated at", outputPath);
}

transform().catch(console.error);
